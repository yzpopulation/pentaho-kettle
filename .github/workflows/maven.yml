# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#    - name: Upload logs
#      shell: bash
#      run: |
#        wget https://github.com/Mikubill/transfer/releases/download/v0.4.7/transfer_0.4.7_linux_amd64.tar.gz
#        tar -zxvf transfer_0.4.7_linux_amd64.tar.gz
#        ./transfer cow --block 2621440 -s -p 64 assemblies/client/target/*.zip 
#     - name: Log Pwd
#       shell: bash
#       run: |
#         pwd
#     - name: Write Pwd
#       run: echo -e "default\nlogin ${{secrets.USERNAME}}\npasswd ${{secrets.PASSWORD}}">/home/runner/.netrc
#     - name: Upload with cow
#       run: ./transfer cow --block 2621440 assemblies/client/target/*.zip 

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.1
      with:
        ref: master
#     - name: Install cadaver
#       run: |
#         wget https://github.com/Mikubill/transfer/releases/download/v0.4.8-beta/transfer_0.4.8-beta3_linux_amd64.tar.gz
#         tar -zxvf transfer_0.4.8-beta3_linux_amd64.tar.gz
#         chmod 777 transfer
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Wget Settings
      shell: bash
      run: |
          wget https://raw.githubusercontent.com/pentaho/maven-parent-poms/master/maven-support-files/settings.xml -O /home/runner/.m2/settings.xml
    - name: Build with Maven
      run: mvn clean install -DskipTests -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3 --file pom.xml
    - name: Set current date as env variable
      run: |
        echo "PACKAGE7ZFILE=${{ github.run_id }}.7z" >> $GITHUB_ENV
    - name: Package 
      run: 7z a ${{ env.PACKAGE7ZFILE }} assemblies/client/target/pdi-ce-*-SNAPSHOT.zip
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PACKAGE7ZFILE }}
        release_name: ${{ env.PACKAGE7ZFILE }}
        draft: false
        prerelease: false
    - name: Upload Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ${{ env.PACKAGE7ZFILE }}
        asset_name: ${{ env.PACKAGE7ZFILE }}
        asset_content_type: application/octet-stream
